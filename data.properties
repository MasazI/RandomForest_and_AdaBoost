#data
# train image data's directory
image.data.path = /var/images/train/

#list No - post image file Name all
#imagelist.all.path = /home/data/validate/v05_query_normal_examples_forpost.tsv
#imagelist.all.path = /home/data/validate/v06_query_normal_examples_forpost.tsv
#imagelist.all.path = /home/data/validate/v06_adaboost_train.txt
#imagelist.all.path = /home/data/validate/v06_adaboost_query.txt
imagelist.all.path = ./examples/query_for_develop_test.tsv

#list No - post image file Name part
imagelist.part.path = /var/local/imagelist/image_data_part.tsv

#list No - post image file Name train
imagelist.train.path = /var/local/imagelist/image_data_train.tsv

query.xml.path=/data/validate/xml/

# response file's directory all
#response.all.path=/var/local/response/s
#response.xml.path=/data/validate/response
response.xml.path=./validate/response

# response file's directory part
response.part.path=/var/local/response/part/

# response file's directory train
response.train.path=/var/local/response/train/

# output errata file all
output.all.errata.path=/data/errata/

# all train category file
all.train.category = /media/sf_images/settings/tall/category_names.tsv
#all.train.category = /media/sf_centoscv/categoryList.tsv
all.train.category = /media/sf_images/settings/tall_20130204/category_names.tsv

# output report
report.file = /media/sf_centoscv

# train / query 's scale
train.query.scale = 2

# number of candidates
number.of.candidates = 20

# dic list
dictionary.list = dic1,dic2,dic3

# weight of recall
number.of.wrecall = 1

# coordinate threshold report file path
report.file.path = /media/sf_centoscv/

# report by component
report.component.path = /media/sf_centoscv/reportByComponent.tsv

# Conclusive answer file
conclusive.file.path = /media/sf_centoscv/conclusive_answer.tsv

# file size output
file.size.output = /media/sf_centoscv/file_size_output.tsv

# adaboost sample
#adaboost.sample.max = 10
#adaboost.sample.allcnt = 100
#adaboost.sample.radius = 3
#adaboost.sample.circle1x = 5
#adaboost.sample.circle1y = 3
#adaboost.sample.circle2x = 3
#adaboost.sample.circle2y = 5

# point threshold value max
#adaboost.pointvalue.max = 10

# adaboost sample make
adaboost.sample.max = 1000
adaboost.sample.allcnt = 5000
adaboost.sample.radius = 250
adaboost.sample.circle1x = 600
adaboost.sample.circle1y = 300
adaboost.sample.circle2x = 300
adaboost.sample.circle2y = 600

# adaboost sample point threshold value max
adaboost.pointvalue.formaxstart = 0
adaboost.pointvalue.formaxend = 1000
adaboost.pointvalue.forminstart = 0
adaboost.pointvalue.forminend = 1000
adaboost.pointvalue.distansestart = 0
adaboost.pointvalue.distanseend = 1000

# adaboost train list file
adaboost.train = /data/validate/v07_train_adaboost_firsthalf.tsv
#adaboost.train = /data/validate/v05_query_adaboost_secondhalf.tsv
adaboost.query = /data/validate/v05_query_adaboost_secondhalf.tsv

# adaboost coordinate threshold value max
adaboost.anglemin.start = 0
adaboost.anglemin.end = 100
adaboost.anglemax.start = 50
adaboost.anglemax.end = 160
adaboost.anglemax.step = 1
adaboost.perimetermin.start = 0
adaboost.perimetermin.end = 8000
adaboost.perimetermax.start = 1000
adaboost.perimetermax.end = 10000
adaboost.perimeter.step = 1
adaboost.inner.start = -10
adaboost.inner.end = 10
adaboost.inner.step = 0.1
adaboost.score.start = 0
adaboost.score.end = 100000
adaboost.score.step = 1

adaboost.norm.start = 0
adaboost.norm.end = 3
adaboost.norm.step = 0.1
 
adaboost.aspect.start = 0
adaboost.aspect.end = 3
adaboost.aspect.step = 0.1

adaboost.x0.start = -3000
adaboost.x0.end = 3000
adaboost.y0.start = -3000
adaboost.y0.end = 3000
adaboost.x2.start = -3000
adaboost.x2.end = 3000
adaboost.y2.start = -3000
adaboost.y2.end = 3000
adaboost.x3.start = -3000
adaboost.x3.end = 3000
adaboost.y3.start = -3000
adaboost.y3.end = 3000
adaboost.liner.step = 1

# Variance Eigen Value Threshold
adaboost.varianceEigenValue.start = -10
adaboost.varianceEigenValue.end = 10
adaboost.varianceEigenValue.step = 0.01

# Sigma Value Threshold
adaboost.sigmaValue.start = 0
adaboost.sigmaValue.end = 5000
adaboost.sigmaValue.step = 1

# adaboost rount cnt
adaboost.round.cnt = 8

# adaboost result output file
adaboost.result.output = /home/adaboost/adaboost_result.tsv

# adaboost positive weight
adaboost.positive.weight = 60

# adaboost negative weight
adaboost.negative.weight = 1

# randomforest sampling
randomforest.tree.cnt = 50
randomforest.sampling.cnt = 20000
randomforest.sampling.max= 1000
randomforest.sampling.seed = 1

# randomforest sample data
randomforest.sample.max = 1000
randomforest.sample.allcnt = 40000
randomforest.sample.radius = 250
randomforest.sample.circle1x = 600
randomforest.sample.circle1y = 300
randomforest.sample.circle2x = 300
randomforest.sample.circle2y = 600

# randomforest sample threshold
randomforest.pointvalue.linestart = 0
randomforest.pointvalue.lineend = 1000
randomforest.pointvalue.linestep = 1
randomforest.pointvalue.distansestart = 100
randomforest.pointvalue.distanseend = 1000
randomforest.pointvalue.distanseendplus = 2000
randomforest.pointvalue.distansestep = 1

# randomforest dictinary dir
randomforest.dictionary.dir = /home/randomforest/dictionary/sample

#randomforest.sample.max = 30
#randomforest.sample.allcnt = 20
#randomforest.sample.radius = 10
#randomforest.sample.circle1x = 12
#randomforest.sample.circle1y = 5
#randomforest.sample.circle2x = 5
#randomforest.sample.circle2y = 15

# randomforest sample threshold
#randomforest.pointvalue.linestart = 0
#randomforest.pointvalue.lineend = 30
#randomforest.pointvalue.linestep = 1
#randomforest.pointvalue.distansestart = 0
#randomforest.pointvalue.distanseend = 35
#randomforest.pointvalue.distansestep = 1

# randomforest errata sampling
randomforest.errata.tree.cnt = 100
randomforest.errata.sampling.cnt = 15000
randomforest.errata.sampling.seed = 1

# randomforest errata threshold
randomforest.errata.pointvalue.anglestart = 0
randomforest.errata.pointvalue.angleend = 180000
randomforest.errata.pointvalue.anglestep = 100
randomforest.errata.pointvalue.perimeterstart = 0
randomforest.errata.pointvalue.perimeterend = 10000000
randomforest.errata.pointvalue.perimeterstep = 1000
randomforest.errata.pointvalue.innerstart = -1000
randomforest.errata.pointvalue.innerend = 1000
randomforest.errata.pointvalue.innerstep = 10
randomforest.errata.pointvalue.scorestart = 0
randomforest.errata.pointvalue.scoreend = 10000000
randomforest.errata.pointvalue.scorestep = 1000

randomforest.errata.pointvalue.aspectstart = 0
randomforest.errata.pointvalue.aspectend = 3000
randomforest.errata.pointvalue.aspectstep = 10

randomforest.errata.pointvalue.normstart = 0
randomforest.errata.pointvalue.normend = 3000
randomforest.errata.pointvalue.normstep = 10

randomforest.errata.pointvalue.pointstart = -2000000
randomforest.errata.pointvalue.pointend = 5000000
randomforest.errata.pointvalue.pointstep = 5000

# randomforest recall wait
randomforest.number.of.wrecall = 1000

# randomforest dictinary dir
randomforest.errata.dictionary.dir = /home/randomforest/errata/

# randomforest classify result output
randomforest.classify.output = /data/output/validate_randomforest.tsv
randomforest.general.classify.output = /data/output/validate_general_randomforest.tsv
